#!/bin/bash

set -e

if [[ -n "${DB_DEBUG}" ]]; then
    set -x
fi

set -u

DIR="$(dirname "$0")"
TERRAFORM_DIR="${DIR}/../deployment/terraform"
ANSIBLE_DIR="${DIR}/../deployment/ansible"

function usage() {
    echo -n \
"Usage: $(basename "$0") COMMAND OPTION[S]
Execute Terraform subcommands with remote state management.
"
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    if [ "${1:-}" = "--help" ]; then
        usage
    else
        if [[ -n "${DB_SETTINGS_BUCKET}" ]] && [[ -n "${ANSIBLE_INVENTORY_FILE}" ]]; then

            pushd "${TERRAFORM_DIR}"

            aws s3 cp "s3://${DB_SETTINGS_BUCKET}/terraform/terraform.tfvars" "${DB_SETTINGS_BUCKET}.tfvars"

            echo
            echo "Attempting to deploy application version [${TRAVIS_COMMIT}]..."
            echo "-----------------------------------------------------"
            echo

            case "${1}" in
                plan)
                    rm -rf .terraform terraform.tfstate*
                    terraform init \
                              -backend-config="bucket=${DB_SETTINGS_BUCKET}" \
                              -backend-config="key=terraform/state"
                    terraform plan \
                              -var-file="${DB_SETTINGS_BUCKET}.tfvars" \
                              -out="${DB_SETTINGS_BUCKET}.tfplan"
                    popd
                    ;;
                apply)
                    terraform apply "${DB_SETTINGS_BUCKET}.tfplan"
                    popd
                    
                    # Provision app server with Ansible
                    eval $(ssh-agent)
                    pushd "${ANSIBLE_DIR}"
                    ssh-add ~/.ssh/district-builder.pem

                    ansible-playbook -vvvv -i "inventory/${ANSIBLE_INVENTORY_FILE}" \
                      district-builder-app-server.yml                    
                    ;;
                *)
                    echo "ERROR: I don't have support for that Terraform subcommand!"
                    exit 1
                    ;;
            esac

            popd
        else
            echo "ERROR: No DB_SETTINGS_BUCKET or ANSIBLE_INVENTORY variable defined."
            exit 1
        fi
    fi
fi
